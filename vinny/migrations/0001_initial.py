# Generated by Django 2.2.26 on 2022-05-13 14:10

import bigvince.storage_backends
from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid
import vinny.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vuid', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=1, verbose_name='Status')),
                ('summary', models.CharField(help_text='A summary of the case.', max_length=1000)),
                ('title', models.CharField(help_text='A title for this case. Optional.', max_length=500)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('vince_id', models.IntegerField(default=0)),
                ('uid', models.CharField(default=vinny.models.generate_uuid, max_length=50)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(default=django.utils.timezone.now)),
                ('seen', models.BooleanField(default=False)),
                ('coordinator', models.BooleanField(default=False)),
                ('vince_id', models.IntegerField(default=0)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('participant', models.ForeignKey(blank=True, help_text='A participant in the case', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participant', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='The user that added the vendor.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseVulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cve', models.CharField(blank=True, max_length=50, null=True, verbose_name='CVE')),
                ('description', models.TextField(verbose_name='Description')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('vince_id', models.IntegerField(blank=True, help_text='The vince pk', null=True)),
                ('case_increment', models.IntegerField(default=0)),
                ('ask_vendor_status', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
            ],
        ),
        migrations.CreateModel(
            name='CRFollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('last_edit', models.DateTimeField(blank=True, null=True, verbose_name='Last Modified Date')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('new_status', models.IntegerField(blank=True, choices=[(0, 'Pending'), (1, 'Open'), (2, 'Reopened'), (3, 'Resolved'), (4, 'Closed'), (5, 'Duplicate')], help_text='If the status was changed, what was it changed to?', null=True, verbose_name='New Status')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', models.TextField(blank=True, null=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('vince_id', models.IntegerField(blank=True, help_text='The vince pk', null=True)),
                ('pinned', models.BooleanField(default=False, help_text='A pinned post is pinned to the top of the page.')),
                ('deleted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(blank=True, help_text='The writer of this post.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(help_text='The case this post belongs to', on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=150)),
                ('to_group', models.CharField(blank=True, max_length=250, null=True)),
                ('from_group', models.CharField(blank=True, max_length=150, null=True)),
                ('groupchat', models.BooleanField(default=False)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
            ],
        ),
        migrations.CreateModel(
            name='VCNoteVulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cve', models.CharField(blank=True, max_length=50, null=True, verbose_name='CVE')),
                ('description', models.TextField(verbose_name='Description')),
                ('uid', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('dateupdated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VCVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_date', models.DateTimeField(help_text='The date that this vendor was first contacted about this vulnerability.')),
                ('vendor', models.CharField(help_text='The name of the vendor that may be affected.', max_length=200)),
                ('references', models.TextField(blank=True, help_text='Vendor references for this case', null=True)),
                ('statement', models.TextField(blank=True, help_text='A general vendor statement for all vuls in the case', null=True)),
                ('dateupdated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VCVulnerabilityNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='vulnote contents')),
                ('title', models.CharField(max_length=512, verbose_name='vul note title')),
                ('references', models.TextField(blank=True, verbose_name='references')),
                ('dateupdated', models.DateTimeField(auto_now=True)),
                ('datefirstpublished', models.DateTimeField(auto_now_add=True)),
                ('revision_number', models.IntegerField(default=1, verbose_name='revision number')),
                ('vuid', models.CharField(max_length=20)),
                ('publicdate', models.DateTimeField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='VendorAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.Case')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.IntegerField()),
                ('vendor_name', models.CharField(max_length=100)),
                ('vendor_type', models.CharField(choices=[('Contact', 'Contact'), ('Vendor', 'Vendor')], default='Vendor', max_length=50)),
                ('countrycode', django_countries.fields.CountryField(blank=True, default='US', max_length=2, null=True)),
                ('active', models.BooleanField(default=True)),
                ('location', models.CharField(choices=[('Domestic', 'Domestic'), ('International', 'International')], default='domestic', max_length=15)),
                ('version', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('email_type', models.CharField(choices=[('Work', 'Work'), ('Other', 'Other'), ('Home', 'Home'), ('School', 'School')], default='Work', max_length=20)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('email_function', models.CharField(choices=[('TO', 'TO'), ('CC', 'CC'), ('EMAIL', 'EMAIL'), ('REPLYTO', 'REPLYTO')], default='TO', max_length=10)),
                ('status', models.BooleanField(default=True)),
                ('version', models.IntegerField(default=0)),
                ('invited', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='ThreadedPost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vinny.Post')),
                ('newest_activity', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Threaded post',
                'verbose_name_plural': 'Threaded posts',
            },
            bases=('vinny.post',),
        ),
        migrations.CreateModel(
            name='VTCaseRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vrf_id', models.CharField(max_length=20)),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_org', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('share_release', models.BooleanField(default=True)),
                ('credit_release', models.BooleanField(default=True)),
                ('comm_attempt', models.BooleanField(blank=True, null=True)),
                ('why_no_attempt', models.CharField(blank=True, choices=[('1', 'I have not attempted to contact any vendors'), ('2', 'I have been unable to find contact information for a vendor'), ('3', 'Other')], max_length=100, null=True)),
                ('please_explain', models.TextField(blank=True, null=True)),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('multiplevendors', models.BooleanField(default=False)),
                ('other_vendors', models.TextField(blank=True, null=True)),
                ('first_contact', models.DateTimeField(blank=True, null=True)),
                ('vendor_communication', models.TextField(blank=True, null=True)),
                ('product_name', models.CharField(max_length=500)),
                ('product_version', models.CharField(blank=True, max_length=100, null=True)),
                ('vul_description', models.TextField(blank=True, null=True)),
                ('vul_exploit', models.TextField(blank=True, null=True)),
                ('vul_impact', models.TextField(blank=True, null=True)),
                ('vul_discovery', models.TextField(blank=True, null=True)),
                ('vul_public', models.BooleanField(default=False)),
                ('public_references', models.CharField(blank=True, max_length=1000, null=True)),
                ('vul_exploited', models.BooleanField(default=False)),
                ('exploit_references', models.CharField(blank=True, max_length=1000, null=True)),
                ('vul_disclose', models.BooleanField(default=False)),
                ('disclosure_plans', models.CharField(blank=True, max_length=1000, null=True)),
                ('user_file', models.FileField(blank=True, null=True, storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to=vinny.models.update_filename)),
                ('date_submitted', models.DateTimeField(default=django.utils.timezone.now)),
                ('tracking', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Open'), (2, 'Reopened'), (3, 'Resolved'), (4, 'Closed'), (5, 'Duplicate')], default=0, verbose_name='Status')),
                ('comments', models.TextField(blank=True, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('user', models.ForeignKey(blank=True, help_text='The user that submitted the report.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VinceProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org', models.CharField(blank=True, max_length=250, null=True)),
                ('preferred_username', models.CharField(blank=True, max_length=250, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, default='US', max_length=2, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('logocolor', models.CharField(default=vinny.models.random_logo_color, max_length=10)),
                ('api_key', models.CharField(blank=True, max_length=256, null=True)),
                ('pending', models.BooleanField(default=True)),
                ('ignored', models.BooleanField(default=False)),
                ('multifactor', models.BooleanField(default=False)),
                ('settings_pickled', models.TextField(blank=True, help_text='This is a base64-encoded representation of a pickled Python dictionary.Do not change this field via the admin.', null=True, verbose_name='Settings Dictionary')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vinceprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('version', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommPostal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(blank=True, default='US', max_length=2, null=True)),
                ('primary', models.BooleanField(default=True)),
                ('address_type', models.CharField(choices=[('Home', 'Home'), ('Work', 'Work'), ('Other', 'Other'), ('School', 'School')], default='Work', max_length=20)),
                ('street', models.CharField(max_length=150)),
                ('street2', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('zip_code', models.CharField(max_length=12)),
                ('version', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(default='+1', max_length=5)),
                ('phone', models.CharField(max_length=50)),
                ('phone_type', models.CharField(choices=[('Fax', 'Fax'), ('Home', 'Home'), ('Hotline', 'Hotline'), ('Office', 'Office'), ('Mobile', 'Mobile')], default='Work', max_length=20)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommPgP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pgp_key_id', models.CharField(max_length=200)),
                ('pgp_fingerprint', models.CharField(blank=True, max_length=200, null=True)),
                ('pgp_version', models.IntegerField(blank=True, null=True)),
                ('pgp_key_data', models.TextField(blank=True, null=True)),
                ('revoked', models.BooleanField(default=False)),
                ('startdate', models.CharField(blank=True, max_length=12, null=True)),
                ('enddate', models.CharField(blank=True, max_length=12, null=True)),
                ('pgp_protocol', models.CharField(blank=True, max_length=30, null=True)),
                ('version', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommInvitedUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200)),
                ('coordinator', models.BooleanField(default=False)),
                ('vince_id', models.IntegerField(default=0)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('user', models.ForeignKey(blank=True, help_text='The user that invited this user.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommGroupAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommEmail')),
            ],
        ),
        migrations.CreateModel(
            name='VinceCommCaseAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('vince_id', models.IntegerField(default=0)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VendorAction', verbose_name='Vendor Action')),
            ],
        ),
        migrations.CreateModel(
            name='VinceAPIToken',
            fields=[
                ('key', models.CharField(max_length=250, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='VendorStatusChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=100, verbose_name='Field')),
                ('old_value', models.TextField(blank=True, null=True, verbose_name='Old Value')),
                ('new_value', models.TextField(blank=True, null=True, verbose_name='New Value')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VendorAction', verbose_name='Vendor Action')),
                ('vul', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseVulnerability')),
            ],
            options={
                'verbose_name': 'Vendor Status change',
                'verbose_name_plural': 'Vendor status changes',
            },
        ),
        migrations.CreateModel(
            name='VCVUReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vuid', models.CharField(max_length=50)),
                ('idnumber', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=500)),
                ('overview', models.TextField(blank=True, null=True)),
                ('datecreated', models.DateTimeField(default=django.utils.timezone.now)),
                ('publicdate', models.DateTimeField(blank=True, null=True)),
                ('datefirstpublished', models.DateTimeField(blank=True, null=True)),
                ('dateupdated', models.DateTimeField(blank=True, null=True)),
                ('keywords_str', models.TextField(blank=True, null=True)),
                ('vulnote', models.ForeignKey(blank=True, help_text='This is used for VINCE published Vul Notes', null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VCVulnerabilityNote')),
            ],
        ),
        migrations.CreateModel(
            name='VCVendorVulStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Affected'), (2, 'Unaffected'), (3, 'Unknown')], default=3, help_text='The vendor status. Unknown until vendor says otherwise.')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('dateupdated', models.DateTimeField(auto_now=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendorvulstatus', to='vinny.VCVendor')),
                ('vul', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VCNoteVulnerability')),
            ],
        ),
        migrations.AddField(
            model_name='vcvendor',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='vinny.VCVulnerabilityNote'),
        ),
        migrations.AddField(
            model_name='vcnotevulnerability',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VCVulnerabilityNote'),
        ),
        migrations.CreateModel(
            name='UserThread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unread', models.BooleanField()),
                ('deleted', models.BooleanField()),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='thread',
            name='users',
            field=models.ManyToManyField(through='vinny.UserThread', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ReportAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('vince_id', models.IntegerField(default=0)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.CRFollowUp', verbose_name='Vendor Action')),
            ],
        ),
        migrations.CreateModel(
            name='PostRevision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.IntegerField(editable=False, verbose_name='revision number')),
                ('user_message', models.TextField(blank=True)),
                ('automatic_log', models.TextField(blank=True, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('locked', models.BooleanField(default=False, verbose_name='locked')),
                ('content', models.TextField(blank=True, verbose_name='vulnote contents')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Post', verbose_name='Post')),
                ('previous_revision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.PostRevision')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'revision_number',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='current_revision',
            field=models.OneToOneField(blank=True, help_text='The revision displayed for this post.  If you need to rollback, change value of this field.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_set', to='vinny.PostRevision'),
        ),
        migrations.AddField(
            model_name='post',
            name='group',
            field=models.ForeignKey(blank=True, help_text='The group of the user', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Message')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='vinny.Thread'),
        ),
        migrations.CreateModel(
            name='GroupContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(blank=True, null=True, storage=bigvince.storage_backends.PrivateMediaStorage(location='vince_logos'), upload_to='')),
                ('logocolor', models.CharField(default=vinny.models.random_logo_color, max_length=10)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.AddField(
            model_name='crfollowup',
            name='cr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VTCaseRequest', verbose_name='Case Request'),
        ),
        migrations.AddField(
            model_name='crfollowup',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='ContactInfoChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('field', models.CharField(max_length=100, verbose_name='Field')),
                ('old_value', models.TextField(blank=True, null=True, verbose_name='Old Value')),
                ('new_value', models.TextField(blank=True, null=True, verbose_name='New Value')),
                ('approved', models.BooleanField(default=False)),
                ('action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VendorAction', verbose_name='Vendor Action')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceCommContact')),
            ],
        ),
        migrations.CreateModel(
            name='CaseViewed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_viewed', models.DateTimeField(default=django.utils.timezone.now)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseTracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking', models.CharField(blank=True, max_length=100, null=True)),
                ('dateupdated', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
        ),
        migrations.CreateModel(
            name='CaseStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('references', models.TextField(blank=True, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('addendum', models.TextField(blank=True, null=True)),
                ('share', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('case', models.ForeignKey(help_text='The case this post belongs to', on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseMember')),
                ('user', models.ForeignKey(blank=True, help_text='The user that provided statement.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CaseMemberStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(2, 'Unaffected'), (1, 'Affected'), (3, 'Unknown')], verbose_name='Status')),
                ('references', models.TextField(blank=True, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseMember')),
                ('user', models.ForeignKey(blank=True, help_text='The user that committed status.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vulnerability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseVulnerability')),
            ],
        ),
        migrations.AddField(
            model_name='case',
            name='cr',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.VTCaseRequest'),
        ),
        migrations.AddField(
            model_name='case',
            name='note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.VCVUReport'),
        ),
        migrations.AddIndex(
            model_name='vtcaserequest',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='vc_caserequest_gin'),
        ),
        migrations.AddField(
            model_name='threadedpost',
            name='parent',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='vinny.Post', verbose_name='Parent'),
        ),
        migrations.AddIndex(
            model_name='postrevision',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='post_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='postrevision',
            unique_together={('post', 'revision_number')},
        ),
        migrations.AlterUniqueTogether(
            name='casetracking',
            unique_together={('group', 'case')},
        ),
        migrations.AlterUniqueTogether(
            name='casestatement',
            unique_together={('case', 'member')},
        ),
        migrations.AlterUniqueTogether(
            name='casememberstatus',
            unique_together={('member', 'vulnerability')},
        ),
        migrations.AlterUniqueTogether(
            name='casemember',
            unique_together={('group', 'case', 'participant')},
        ),
        migrations.AddIndex(
            model_name='case',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='vc_case_gin'),
        ),
        migrations.RunSQL(
            sql="\n            DROP TRIGGER IF EXISTS vc_case_update_trigger ON vinny_case;\n            CREATE TRIGGER vc_case_update_trigger\n            BEFORE INSERT OR UPDATE of vuid, summary, title\n            ON vinny_case\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(search_vector, 'pg_catalog.english', vuid, summary, title);\n\n            UPDATE vinny_case SET search_vector = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS vc_case_update_trigger\n            ON vinny_case;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            DROP TRIGGER IF EXISTS vc_post_update_trigger\n            ON vinny_postrevision;\n            CREATE TRIGGER vc_post_update_trigger\n            BEFORE INSERT OR UPDATE of content\n            ON vinny_postrevision\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(search_vector, 'pg_catalog.english', content);\n\n            UPDATE vinny_postrevision SET search_vector = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS vc_post_update_trigger\n            ON vinny_postrevision;\n            ',
        ),
        migrations.RunSQL(
            sql="\n            DROP TRIGGER IF EXISTS vc_cr_update_trigger\n            ON vinny_vtcaserequest;\n            CREATE TRIGGER vc_cr_update_trigger\n            BEFORE INSERT OR UPDATE of vrf_id, contact_name, contact_org, contact_email, why_no_attempt, please_explain, vendor_name, other_vendors, vendor_communication, product_name, product_version, vul_description, vul_exploit, vul_impact, vul_discovery, public_references, exploit_references, disclosure_plans, tracking, comments, search_vector\n            ON vinny_vtcaserequest\n            FOR EACH ROW EXECUTE PROCEDURE\n            tsvector_update_trigger(search_vector, 'pg_catalog.english', vrf_id, contact_name, contact_org, contact_email, why_no_attempt, please_explain, vendor_name, other_vendors, vendor_communication, product_name, product_version, vul_description, vul_exploit, vul_impact, vul_discovery, public_references, exploit_references, disclosure_plans, tracking, comments);\n            UPDATE vinny_vtcaserequest SET search_vector = NULL;\n            ",
            reverse_sql='\n            DROP TRIGGER IF EXISTS vc_cr_update_trigger\n            ON vinny_vtcaserequest;\n            ',
        ),
        migrations.AddField(
            model_name='vincecommemail',
            name='email_list',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='case',
            name='note',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.VCVUReport'),
        ),
        migrations.AddField(
            model_name='case',
            name='publicdate',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='vcvendor',
            name='contact_date',
            field=models.DateTimeField(blank=True, help_text='The date that this vendor was first contacted about this vulnerability.', null=True),
        ),
        migrations.AddField(
            model_name='vtcaserequest',
            name='new_vuid',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='vcvulnerabilitynote',
            name='datefirstpublished',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vcvendor',
            name='addendum',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vendoraction',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.Post'),
        ),
        migrations.AddField(
            model_name='casememberstatus',
            name='approved',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='casestatement',
            name='approved',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='casememberstatus',
            name='status',
            field=models.IntegerField(choices=[(2, 'Not Affected'), (1, 'Affected'), (3, 'Unknown')], verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='vcvendorvulstatus',
            name='status',
            field=models.IntegerField(choices=[(1, 'Affected'), (2, 'Not Affected'), (3, 'Unknown')], default=3, help_text='The vendor status. Unknown until vendor says otherwise.'),
        ),
        migrations.AlterField(
            model_name='vcvendorvulstatus',
            name='vul',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notevulnerability', to='vinny.VCNoteVulnerability'),
        ),
        migrations.AddField(
            model_name='vcnotevulnerability',
            name='case_increment',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='vincecommpgp',
            name='pgp_protocol',
            field=models.CharField(default='GPG1 ARMOR MIME', max_length=30),
        ),
        migrations.AddField(
            model_name='vcvendor',
            name='uuid',
            field=models.UUIDField(blank=True, help_text='The uuid of the contact.', null=True),
        ),
        migrations.AddField(
            model_name='vincecommcontact',
            name='uuid',
            field=models.UUIDField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='vcnotevulnerability',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notevuls', to='vinny.VCVulnerabilityNote'),
        ),
        migrations.AddField(
            model_name='vcvendor',
            name='statement_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='case',
            name='publicurl',
            field=models.CharField(blank=True, help_text='The URL for the public notice of a vulnerability.', max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='vcvendor',
            name='dateupdated',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='vcvulnerabilitynote',
            name='dateupdated',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='vcvulnerabilitynote',
            name='references',
            field=models.TextField(blank=True, null=True, verbose_name='references'),
        ),
        migrations.AlterField(
            model_name='groupcontact',
            name='logo',
            field=models.FileField(blank=True, null=True, storage=bigvince.storage_backends.SharedMediaStorage(location='vince_logos'), upload_to=''),
        ),
        migrations.AddField(
            model_name='casemember',
            name='reporter_group',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='casevulnerability',
            name='deleted',
            field=models.BooleanField(default=False, help_text='Only True if vulnerability is removed after publication'),
        ),
        migrations.CreateModel(
            name='VinceAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=1000, storage=bigvince.storage_backends.SharedMediaStorage(), upload_to=vinny.models.get_uuid_filename, verbose_name='File')),
                ('filename', models.CharField(max_length=1000, verbose_name='Filename')),
                ('mime_type', models.CharField(max_length=255, verbose_name='MIME Type')),
                ('size', models.IntegerField(help_text='Size of this file in bytes', verbose_name='Size')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('uploaded_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Vince Attachment',
                'verbose_name_plural': 'Vince Attachments',
                'ordering': ('filename',),
            },
        ),
        migrations.AlterField(
            model_name='messageattachment',
            name='attachment',
            field=models.FileField(blank=True, null=True, storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to=''),
        ),
        migrations.AlterField(
            model_name='reportattachment',
            name='attachment',
            field=models.FileField(blank=True, null=True, storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to=''),
        ),
        migrations.AlterField(
            model_name='vincecommcaseattachment',
            name='attachment',
            field=models.FileField(blank=True, null=True, storage=bigvince.storage_backends.PrivateMediaStorage(), upload_to=''),
        ),
        migrations.AddField(
            model_name='messageattachment',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceAttachment'),
        ),
        migrations.AddField(
            model_name='reportattachment',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceAttachment'),
        ),
        migrations.AddField(
            model_name='vincecommcaseattachment',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceAttachment'),
        ),
        migrations.CreateModel(
            name='VinceTrackAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vulnote', models.BooleanField(default=False)),
                ('shared', models.BooleanField(default=False)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.Case')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.VinceAttachment')),
            ],
        ),
        migrations.AddField(
            model_name='vincecommpgp',
            name='pgp_email',
            field=models.EmailField(blank=True, help_text='The email address that belongs with this PGP key', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='vendoraction',
            name='member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.CaseMember'),
        ),
        migrations.CreateModel(
            name='CaseCoordinator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
            ],
        ),
        migrations.AddField(
            model_name='groupcontact',
            name='default_access',
            field=models.BooleanField(default=True, help_text='If true, grant case access to users in group by default'),
        ),
        migrations.CreateModel(
            name='CaseMemberUserAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('admin', models.ForeignKey(blank=True, help_text='User that made change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin', to=settings.AUTH_USER_MODEL)),
                ('casemember', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseMember')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='vincecommgroupadmin',
            name='comm_action',
            field=models.BooleanField(default=False, help_text='If true, group admin was created by another group admin'),
        ),
        migrations.CreateModel(
            name='VCDailyNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posts', models.IntegerField(default=1)),
                ('tracking', models.CharField(blank=True, max_length=100, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.Case')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='vinceprofile',
            name='timezone',
            field=models.CharField(default='UTC', max_length=100),
        ),
        migrations.AddField(
            model_name='vinceprofile',
            name='service',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='groupcontact',
            name='vincetrack',
            field=models.BooleanField(default=False, help_text='Is this a vincetrack group?'),
        ),
        migrations.CreateModel(
            name='CaseVulExploit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('reference_date', models.DateTimeField(blank=True, null=True)),
                ('link', models.URLField()),
                ('reference_type', models.CharField(choices=[('code', 'code'), ('report', 'report'), ('other', 'other')], default='code', max_length=30)),
                ('notes', models.TextField(blank=True, null=True)),
                ('vul', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseVulnerability')),
                ('vince_id', models.IntegerField(blank=True, help_text='The vince exploit pk', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseVulCVSS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Modified Date')),
                ('vector', models.CharField(blank=True, max_length=100, null=True, verbose_name='CVSS Vector String')),
                ('score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='CVSS Base Score')),
                ('severity', models.CharField(blank=True, max_length=20, null=True, verbose_name='CVSS Severity')),
                ('vul', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vinny.CaseVulnerability')),
            ],
        ),
        migrations.AddField(
            model_name='vtcaserequest',
            name='ics_impact',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='vtcaserequest',
            name='coordinator',
            field=models.ForeignKey(blank=True, help_text='The group assigned to this report.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.AddField(
            model_name='case',
            name='team_owner',
            field=models.ForeignKey(blank=True, help_text='The coordinator group that is leading this case', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.CreateModel(
            name='CoordinatorSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_signature', models.TextField(blank=True, help_text='Email signature for automatic case messages sent by VINCE to case participants', null=True)),
                ('team_email', models.CharField(blank=True, help_text='Email address to use for outgoing email. If not set, uses DEFAULT_REPLY_EMAIL in settings', max_length=100, null=True)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('disclosure_link', models.URLField(blank=True, help_text='Link to disclosure guidance that will be presented to case members at first view of case', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VINCEEmailNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.BooleanField(default=False)),
                ('date_sent', models.DateTimeField(default=django.utils.timezone.now)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vinny.Case')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
